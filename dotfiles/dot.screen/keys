# vim: filetype=screen foldmethod=marker
# UNUSED DEFAULT KEY BINDINGS #{{{1

bind b	# break
bind ^B	# break
bind B	# pow_break
bind c	# screen
bind ^C	# screen
bind d	# detach
bind ^D	# detach
bind D	# pow_detach
bind f	# flow
bind ^F	# flow
bind h	# hardcopy
bind H	# log
bind k	# kill
bind ^K	# kill
bind L	# login
bind s	# xoff
bind ^S	# xoff
bind q	# xon
bind ^Q	# xon
bind ^V	# digraph
bind W	# width
bind x	# lockscreen
bind ^X	# lockscreen
bind X	# remove
bind .	# dumptermcap
bind ^\	# quit
bind >	# writebuf
bind <	# readbuf
bind =	# removebuf




# MISC.  #{{{1

bind ^H help

bind ^@ copy
bind p paste .
bind ^P paste .
bind T title
bind V version
bind y eval 'register = ^A^Y' 'process ='
bind ^Y eval 'writebuf' 'exec sh -c "i=/tmp/screen-exchange;pbcopy<\$i;rm \$i"'

bind ^D eval 'echo -p "\^\^D%080="' 'command -c detach'
bind -c detach d detach
bind -c detach ^D detach
bind -c detach D pow_detach

# BUGS: directly use of "source ..." or "eval 'source ...'" causes GNU screen
# crashing, so here we have to indirectly use them via external command.
bind . exec sh -c 'screen -X source ~/.screenrc; screen -X echo "~/.screenrc has been reloaded."'

bind ^E eval 'echo -p "Encoding? -- Cp932 / Euc-jp / Utf-8"' 'command -c enc'
bind -c enc ^C eval 'encoding "sjis"'    'echo "cp932"'
bind -c enc ^E eval 'encoding "euc-jp"'  'echo "euc-jp"'
bind -c enc ^U eval 'encoding "utf-8"'   'echo "utf-8"'

bind I eval 'title "main"' 'screen -t "another"' 'select "main"'




# WINDOW  #{{{1
#
# Like Vim's key bindings for windows.

bind n screen
bind ^N screen
bind c kill
bind ^C kill

bind j next
bind ^J next
bind k prev
bind ^K prev




# REGION  #{{{1
#
# Like Vim's key bindings for windows.
# Use the prefix ^R instead of ^W.

bind ^R eval 'echo -p "\^\^R%080="' 'command -c region'
bind -c region n split
bind -c region ^N split
bind -c region s eval 'split' 'focus down' 'other'  # split the current window
bind -c region ^S eval 'split' 'focus down' 'other'
bind -c region c remove
bind -c region ^C remove
bind -c region o only
bind -c region ^O only
bind -c region j focus down
bind -c region ^J focus down
bind -c region k focus up
bind -c region ^K focus up
bind -c region t focus top
bind -c region ^T focus top
bind -c region b focus bottom
bind -c region ^B focus bottom
bind -c region r focus down
bind -c region ^R focus down
bind -c region R focus up
bind -c region = resize =
bind -c region + resize +1
bind -c region - resize -1
bind -c region _ resize max




# __END__  #{{{1
